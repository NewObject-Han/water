<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.ssm.charge.mapper.PayMapper">
    <resultMap id="BaseResultMap" type="com.zking.ssm.charge.model.Pay">
        <id column="PayNo" property="payno" jdbcType="VARCHAR"/>
        <result column="UserNo" property="userno" jdbcType="VARCHAR"/>
        <result column="PayType" property="paytype" jdbcType="VARCHAR"/>
        <result column="PayDate" property="paydate" jdbcType="TIMESTAMP"/>
        <result column="Invoice" property="invoice" jdbcType="VARCHAR"/>
        <result column="PayMoney" property="paymoney" jdbcType="REAL"/>
        <result column="UseMoney" property="usemoney" jdbcType="REAL"/>
        <result column="EmpID" property="empid" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.zking.ssm.charge.model.Pay">
        <id column="PayNo" property="payno" jdbcType="VARCHAR"/>
        <result column="UserNo" property="userno" jdbcType="VARCHAR"/>
        <result column="UserName" property="username" jdbcType="VARCHAR"/>
        <result column="PayType" property="paytype" jdbcType="VARCHAR"/>
        <result column="PayDate" property="paydate" jdbcType="TIMESTAMP"/>
        <result column="Invoice" property="invoice" jdbcType="VARCHAR"/>
        <result column="PayMoney" property="paymoney" jdbcType="REAL"/>
        <result column="UseMoney" property="usemoney" jdbcType="REAL"/>
        <result column="EmpID" property="empid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    PayNo, UserNo, PayType, PayDate, Invoice, PayMoney, UseMoney, EmpID
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from py_pay
        where PayNo = #{payno,jdbcType=VARCHAR}
    </select>
    <select id="selectHistory" resultMap="BaseResultMap" resultType="java.util.List">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        py_pay
        where UserNo=#{userno,jdbcType=VARCHAR} ORDER BY PayDate desc
    </select>
    <select id="queryUserPay" resultMap="ResultMap" resultType="java.util.List">
      SELECT
        py_pay.PayNo,
        py_pay.PayType,
        py_pay.PayDate,
        py_pay.Invoice,
        py_pay.PayMoney,
        py_pay.UseMoney,
        py_pay.EmpID,
        us_user.UserNo,
        us_user.UserName
        FROM
        py_pay
        INNER JOIN us_user ON py_pay.UserNo = us_user.UserNo
        GROUP BY
        py_pay.PayNo
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from py_pay
    where PayNo = #{payno,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.zking.ssm.charge.model.Pay">
    insert into py_pay (PayNo, UserNo, PayType, 
      PayDate, Invoice, PayMoney, 
      UseMoney, EmpID)
    values (#{payno,jdbcType=VARCHAR}, #{userno,jdbcType=VARCHAR}, #{paytype,jdbcType=VARCHAR}, 
      #{paydate,jdbcType=TIMESTAMP}, #{invoice,jdbcType=VARCHAR}, #{paymoney,jdbcType=REAL}, 
      #{usemoney,jdbcType=REAL}, #{empid,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zking.ssm.charge.model.Pay">
        insert into py_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payno != null">
                PayNo,
            </if>
            <if test="userno != null">
                UserNo,
            </if>
            <if test="paytype != null">
                PayType,
            </if>
            <if test="paydate != null">
                PayDate,
            </if>
            <if test="invoice != null">
                Invoice,
            </if>
            <if test="paymoney != null">
                PayMoney,
            </if>
            <if test="usemoney != null">
                UseMoney,
            </if>
            <if test="empid != null">
                EmpID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payno != null">
                #{payno,jdbcType=VARCHAR},
            </if>
            <if test="userno != null">
                #{userno,jdbcType=VARCHAR},
            </if>
            <if test="paytype != null">
                #{paytype,jdbcType=VARCHAR},
            </if>
            <if test="paydate != null">
                #{paydate,jdbcType=TIMESTAMP},
            </if>
            <if test="invoice != null">
                #{invoice,jdbcType=VARCHAR},
            </if>
            <if test="paymoney != null">
                #{paymoney,jdbcType=REAL},
            </if>
            <if test="usemoney != null">
                #{usemoney,jdbcType=REAL},
            </if>
            <if test="empid != null">
                #{empid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zking.ssm.charge.model.Pay">
        update py_pay
        <set>
            <if test="userno != null">
                UserNo = #{userno,jdbcType=VARCHAR},
            </if>
            <if test="paytype != null">
                PayType = #{paytype,jdbcType=VARCHAR},
            </if>
            <if test="paydate != null">
                PayDate = #{paydate,jdbcType=TIMESTAMP},
            </if>
            <if test="invoice != null">
                Invoice = #{invoice,jdbcType=VARCHAR},
            </if>
            <if test="paymoney != null">
                PayMoney = #{paymoney,jdbcType=REAL},
            </if>
            <if test="usemoney != null">
                UseMoney = #{usemoney,jdbcType=REAL},
            </if>
            <if test="empid != null">
                EmpID = #{empid,jdbcType=INTEGER},
            </if>
        </set>
        where PayNo = #{payno,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zking.ssm.charge.model.Pay">
    update py_pay
    set UserNo = #{userno,jdbcType=VARCHAR},
      PayType = #{paytype,jdbcType=VARCHAR},
      PayDate = #{paydate,jdbcType=TIMESTAMP},
      Invoice = #{invoice,jdbcType=VARCHAR},
      PayMoney = #{paymoney,jdbcType=REAL},
      UseMoney = #{usemoney,jdbcType=REAL},
      EmpID = #{empid,jdbcType=INTEGER}
    where PayNo = #{payno,jdbcType=VARCHAR}
  </update>
</mapper>